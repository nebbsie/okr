@use 'breakpoints';
@use 'variables';

$spacing-name: 'none'
               'xxxsmall'
               'xxsmall'
               'xsmall'
               'small'
               'mid'
               'large'
               'xlarge'
               'xxlarge'
               'xxxlarge'
               'xxxxlarge';

$spacing-list:
        variables.$spacing-none
        variables.$spacing-xxxsmall
        variables.$spacing-xxsmall
        variables.$spacing-xsmall
        variables.$spacing-small
        variables.$spacing-mid
        variables.$spacing-large
        variables.$spacing-xlarge
        variables.$spacing-xxlarge
        variables.$spacing-xxxlarge
        variables.$spacing-xxxxlarge;

/* Generates default spacing */
@each $spacing-item in $spacing-list {
  $i: index($spacing-list, $spacing-item);

  #{'[data-margin-right=' + nth($spacing-name, $i) + ']'} {
    margin-right: $spacing-item !important;
  }

  #{'[data-margin-bottom=' + nth($spacing-name, $i) + ']'} {
    margin-bottom: $spacing-item !important;
  }
}

/* Generates spacing for tablet */
@include breakpoints.tablet() {
  @each $spacing-item in $spacing-list {
    $i: index($spacing-list, $spacing-item);

    #{'[data-margin-right-tablet=' + nth($spacing-name, $i) + ']'} {
      margin-right: $spacing-item !important;
    }

    #{'[data-margin-bottom-tablet=' + nth($spacing-name, $i) + ']'} {
      margin-bottom: $spacing-item !important;
    }
  }
}

/* Generates spacing for desktop */
@include breakpoints.desktop() {
  @each $spacing-item in $spacing-list {
    $i: index($spacing-list, $spacing-item);

    #{'[data-margin-right-desktop=' + nth($spacing-name, $i) + ']'} {
      margin-right: $spacing-item !important;
    }

    #{'[data-margin-bottom-desktop=' + nth($spacing-name, $i) + ']'} {
      margin-bottom: $spacing-item !important;
    }
  }
}